name: Serverless - Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - serverless/**
  schedule:
    - cron: 0 16 * * 1 # Every Monday at 4pm UTC

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version: stable # https://golang.org/dl/
      - name: Go Format
        run: test -z $(gofmt -l -w -s .)
      - name: Lint AMI Cleaner
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=5m
          working-directory: ./serverless/ami-cleaner
      - name: Lint SNS Notifier
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=5m
          working-directory: ./serverless/sns-notifier
  deploy-snsnotifier:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        account-id: ["418875065733"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: stable # https://golang.org/dl/
      - name: Install Serverless
        run: |
          npm install serverless
          echo "$GITHUB_WORKSPACE/node_modules/.bin" >> $GITHUB_PATH
      - name: AWS Assume Role
        uses: aws-actions/configure-aws-credentials@v3.0.0
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_USER }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_USER }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/ServiceAdmin
          role-session-name: GitHubActions
          role-duration-seconds: 1800
      - name: Deploy SNS Notifier
        run: make deploy
        working-directory: ./serverless/sns-notifier
  deploy-amicleaner:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        account-id: ["418875065733", "038361916180", "840856573771"]
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: stable # https://golang.org/dl/
      - name: Install Serverless
        run: |
          npm install serverless
          echo "$GITHUB_WORKSPACE/node_modules/.bin" >> $GITHUB_PATH
      - name: AWS Assume Role
        uses: aws-actions/configure-aws-credentials@v3.0.0
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_USER }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_USER }}
          role-to-assume: arn:aws:iam::${{ matrix.account-id }}:role/ServiceAdmin
          role-session-name: GitHubActions
          role-duration-seconds: 1800
      - name: Deploy AMI Cleaner
        run: make deploy
        working-directory: ./serverless/ami-cleaner
